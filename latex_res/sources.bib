@article{10.1145/2742544,
author = {Koutis, Ioannis and Williams, Ryan},
title = {Algebraic Fingerprints for Faster Algorithms},
year = {2015},
issue_date = {January 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {59},
number = {1},
issn = {0001-0782},
url = {https://doi.org/10.1145/2742544},
doi = {10.1145/2742544},
abstract = {Algorithmic solutions to tough computational problems are making an impressive comeback.},
journal = {Commun. ACM},
month = dec,
pages = {98–105},
numpages = {8}
}

@InProceedings{10.1007/978-3-540-70575-8_47,
author="Koutis, Ioannis",
editor="Aceto, Luca
and Damg{\aa}rd, Ivan
and Goldberg, Leslie Ann
and Halld{\'o}rsson, Magn{\'u}s M.
and Ing{\'o}lfsd{\'o}ttir, Anna
and Walukiewicz, Igor",
title="Faster Algebraic Algorithms for Path and Packing Problems",
booktitle="Automata, Languages and Programming",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="575--586",
abstract="We study the problem of deciding whether an n-variate polynomial, presented as an arithmetic circuit G, contains a degree k square-free term with an odd coefficient. We show that if G can be evaluated over the integers modulo 2k{\thinspace}+{\thinspace}1 in time t and space s, the problem can be decided with constant probability in O((kn{\thinspace}+{\thinspace}t)2k) time and O(kn{\thinspace}+{\thinspace}s) space. Based on this, we present new and faster algorithms for two well studied problems: (i) an O*(2mk) algorithm for the m-set k-packing problem and (ii) an O*(23k/2) algorithm for the simple k-path problem, or an O*(2k) algorithm if the graph has an induced k-subgraph with an odd number of Hamiltonian paths. Our algorithms use poly(n) random bits, comparing to the 2O(k) random bits required in prior algorithms, while having similar low space requirements.",
isbn="978-3-540-70575-8"
}

@article{doi:10.1137/110839229,
author = {Bj\"{o}rklund, Andreas},
title = {Determinant Sums for Undirected Hamiltonicity},
journal = {SIAM Journal on Computing},
volume = {43},
number = {1},
pages = {280-299},
year = {2014},
doi = {10.1137/110839229},
URL = { 
        https://doi.org/10.1137/110839229
},
eprint = {   
        https://doi.org/10.1137/110839229
}
,
    abstract = { We present a Monte Carlo algorithm for Hamiltonicity detection in an \$n\$-vertex undirected graph running in \$O(1.657^{n})\$ time. To the best of our knowledge, this is the first superpolynomial improvement on the worst case runtime for the problem since the \$O^*(2^n)\$ bound established for the traveling salesman problem (TSP) over 50 years ago [R. Bellman, J. Assoc. Comput. Mach., 9 (1962), pp. 61--63], [M. Held and R. M. Karp, J. Soc. Indust. Appl. Math., 10 (1962), pp. 196--210]. (\$O^*(f(n))\$ suppresses polylogarithmic functions in \$f(n)\$). It answers in part the first open problem in Woeginger's 2003 survey on exact algorithms for NP-hard problems. For bipartite graphs, we improve the bound to \$O^*(\sqrt{2}^n)\subset O(1.415^{n})\$ time. Both the bipartite and the general algorithm can be implemented to use space polynomial in \$n\$. We combine several recently resurrected ideas to get the results. Our main technical contribution is a new algebraic characterization of Hamiltonian graphs. We introduce an extension of Hamiltonicity called Labeled Hamiltonicity and relate it to a Labeled Cycle Cover Sum in which we are set to count weighted arc labeled cycle covers over a finite field of characteristic two. The Labeled Cycle Cover Sum can be evaluated efficiently via determinants. }
}

@article{WILLIAMS2009315,
title = {Finding paths of length k in O*(2k) time},
journal = {Information Processing Letters},
volume = {109},
number = {6},
pages = {315-318},
year = {2009},
issn = {0020-0190},
doi = {https://doi.org/10.1016/j.ipl.2008.11.004},
url = {https://www.sciencedirect.com/science/article/pii/S0020019008003396},
author = {Ryan Williams},
keywords = {Randomized algorithms, Parameterized algorithms, Graph algorithms, Group algebra},
abstract = {We give a randomized algorithm that determines if a given graph has a simple path of length at least k in O(2k⋅poly(n)) time. Our method extends a recent O(23k/2⋅poly(n))⩽O(2.83k⋅poly(n)) algorithm of Koutis.}
}